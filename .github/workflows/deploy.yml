name: Deploy

on:
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  deploy-qa:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: qa
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install pipenv
      run: pip install pipenv

    - name: Configure SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to QA
      env:
        ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
      run: |
        cd ..
        # clone deployment playbook
        git clone --single-branch --branch main git@github.com:tulibraries/ansible-playbook-gencon50.git
        cd ansible-playbook-gencon50
        # install playbook requirements
        pipenv install
        # install playbook role requirements
        pipenv run ansible-galaxy install -r requirements.yml
        
        # setup vault password
        echo $ANSIBLE_VAULT_PASSWORD > ~/.vault
        
        # deploy to qa using ansible-playbook
        echo "Running: pipenv run ansible-playbook -i inventory/qa playbook.yml --vault-password-file=~/.vault"
        pipenv run ansible-playbook -i inventory/qa playbook.yml --vault-password-file=~/.vault

  deploy-prod:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install pipenv
      run: pip install pipenv

    - name: Configure SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to Production
      env:
        ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
      run: |
        cd ..
        # clone deployment playbook
        git clone --single-branch --branch main git@github.com:tulibraries/ansible-playbook-gencon50.git
        cd ansible-playbook-gencon50
        # install playbook requirements
        pipenv install
        # install playbook role requirements
        pipenv run ansible-galaxy install -r requirements.yml
        
        # setup vault password
        echo $ANSIBLE_VAULT_PASSWORD > ~/.vault
        
        # deploy to production using ansible-playbook
        echo "Running: pipenv run ansible-playbook -i inventory/prod playbook.yml --vault-password-file=~/.vault -e rails_app_git_branch=${{ github.ref_name }}"
        pipenv run ansible-playbook -i inventory/prod playbook.yml --vault-password-file=~/.vault -e rails_app_git_branch=${{ github.ref_name }}
