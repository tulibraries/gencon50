name: QA Deploy

permissions:
  contents: read

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

env:
  GENCON50_BRANCH: ${{ github.ref_name }}
  ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}

defaults:
  run:
    working-directory: ansible-playbook-gencon50

jobs:
  qa-deploy:

    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: [ 3.12 ]
    
    steps:
    - uses: actions/checkout@v4
      with:
        path: gencon50

    - name: Checkout ansible-playbook-gencon50 (private)
      uses: actions/checkout@v4
      with:
        repository: tulibraries/ansible-playbook-gencon50
        token: ${{ secrets.MY_PAT }}
        path: ansible-playbook-gencon50
        ref: main

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: "pipenv"

    - name: Install pipenv
      run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python

    - name: Install dependencies
      run: pipenv install --dev

    - name: Checkout ansible-playbook-gencon50 (private)
      uses: actions/checkout@v4
      with:
        repository: tulibraries/ansible-playbook-gencon50
        token: ${{ secrets.MY_PAT }}
        path: ansible-playbook-gencon50
        ref: main

    - name: Dump vault password to disk
      env:
        ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
      run: |
        echo "::add-mask::$ANSIBLE_VAULT_PASSWORD"
        printf '%s' "${ANSIBLE_VAULT_PASSWORD}" > "$HOME/.vault"
        chmod 600 "$HOME/.vault"
    
    - name: Configure SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

    - name: Deploy to QA
      working-directory: ansible-playbook-gencon50
      run: |
        pipenv run ansible-galaxy install -r requirements.yml
        pipenv run ansible-playbook -i inventory/qa playbook.yml --vault-password-file "$HOME/.vault" -e rails_app_git_branch=$GENCON50_BRANCH

  notify_on_failure:
    if: failure()
    needs: [qa-deploy]
    uses: tulibraries/.github/.github/workflows/slack-notify.yml@main
    with:
      repo: ${{ github.repository }}
      run_id: ${{ github.run_id }}
      workflow: ${{ github.workflow }}
    secrets: inherit

